plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.7.20"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
    id "org.barfuin.gradle.jacocolog" version "3.1.0"
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

test {
    testLogging.exceptionFormat = 'full'
    finalizedBy jacocoTestReport
}

release {
    git {
        requireBranch.set("v0")
    }
}

// publish settings
apply from: "../gradle/deploy-ossrh.gradle"
apply from: "https://raw.githubusercontent.com/tonisives/tools/master/scripts/jupiter-test-shell-logging.gradle"

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutinesVersion"

    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0')

    if (!project.hasProperty('depLocation') || project.depLocation > 0) {
        api deps.crypto
    } else {
        api project(":hmkit-crypto-telematics")
    }

    // web
    implementation('com.squareup.okhttp3:okhttp:4.10.0')

    // Koin
    implementation "io.insert-koin:koin-core:$koinVersion"

    // logging
    implementation 'org.slf4j:slf4j-api:1.7.36'

    // test
    testImplementation deps.autoApi
    testImplementation "io.insert-koin:koin-test:$koinVersion"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation 'io.mockk:mockk:1.12.5'
    testImplementation 'com.charleskorn.kaml:kaml:0.47.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
}