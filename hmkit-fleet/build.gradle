plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"

    // CI
    id "org.barfuin.gradle.jacocolog" version "3.1.0"
    id "io.gitlab.arturbosch.detekt" version "1.23.0"
    id "org.jetbrains.dokka" version "1.8.20"
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

test {
    testLogging.exceptionFormat = 'full'
    finalizedBy jacocoTestReport
}

// publish settings
apply from: "../gradle/deploy-ossrh.gradle"
apply from: "https://raw.githubusercontent.com/tonisives/tools/master/scripts/jupiter-test-shell-logging.gradle"

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutinesVersion"
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0')

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    api('com.squareup.okhttp3:okhttp:4.12.0')

    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // test
    testImplementation "io.insert-koin:koin-test:$koinVersion"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    testImplementation 'org.slf4j:slf4j-simple:2.0.9'
    testImplementation 'io.mockk:mockk:1.13.7'
    testImplementation 'com.charleskorn.kaml:kaml:0.55.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'

    detektPlugins('io.gitlab.arturbosch.detekt:detekt-formatting:1.23.0')
}

detekt {
    config = files("$rootDir/detekt.yaml")
    buildUponDefaultConfig = true
}

dokkaHtml {
    outputDirectory.set(file("$buildDir/dokka/html/v2"))
}

dokkaJavadoc {
    outputDirectory.set(file("$buildDir/dokka/html/v2/javadoc"))
}